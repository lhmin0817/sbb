plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.2'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.mysite'
version = '0.0.3-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	
	// devtools : 수정 변경 시 자동으로 톰켓을 재시작(중지 => 시작) - 자동 컴파일 
	// development : 실제 서비스로 빌드 할 때는 빌드 되지 않도록 설정, 개발 당시에만 필요
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	//lombok 라이브러리 등록
	compileOnly 'org.projectlombok:lombok'			//캄파일 단계에서만 필요한 경우에 사용됨
	annotationProcessor 'org.projectlombok:lombok'	//컴파일 단계에서만 어노테이션을 분석 처리함 
	//H2 라이브러리
	runtimeOnly 'com.h2database:h2'					//실행 시에만 작동, 테스트 환경
	//JPA 라이브러리
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	
	//Thymeleaf : View page, 백엔드에서 처리한 데이터를 .html에 넣어줄 수 있도록 처리하는 라이브러리
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect' 
	
	// Spring 에서 제공해주는 유효성 검사 라이브러리 : form에서 빈값이나 글자 수 제한
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	
	// 스프링 시큐리티 : 스프링 기반 애플리케이션의 인증과 권한을 담당하는 스프링의 하위 프레임 워크
		// 인증(Authenticate)은 로그인을 의미
		// 권한(Authorize)은 인증된 사용자가 어떤 것을 할 수 있는지 의미
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6:3.1.1.RELEASE'
	
	implementation 'org.commonmark:commonmark:0.21.0'
	
	//oracle 라이브러리 
	//implementation 'com.oracle.database.jdbc:ojdbc10'
	implementation 'com.oracle.database.jdbc:ojdbc11'
	
	//JDBC
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	
	
	
}

tasks.named('test') {
	useJUnitPlatform()
}
